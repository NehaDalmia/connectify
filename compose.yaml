version: "3.0"
name: "connectify"
services:
    # LOAD BALANCER
    gateway:
        image: nginx
        container_name: gateway
        volumes:
            - ./nginx/conf:/etc/nginx/conf.d/
        ports:
            - 8080:80
        deploy:
        networks:       
            - internal
        depends_on:
            - primary_manager
            - readonly_manager
        environment:
            - COMPOSE_PROJECT_NAME 
    
    # PRIMARY MANAGER
    primary_manager:
        image: connectify/primary_manager
        build: ./primary_manager
        container_name: primary
        hostname: primary
        deploy:
        networks:       
            - internal
        environment:
            - DB_NAME=prime_datadb
            - READ_REPLICAS=3 # same as replicas of read only managers
            - COMPOSE_PROJECT_NAME 
        entrypoint: python3
        command: app.py
        depends_on: 
            - prime_datadb

    # READ ONLY MANAGERS
    readonly_manager:
        image: connectify/readonly_manager
        build: ./readonly_manager
        deploy:
            replicas: 3
        networks:       
            - internal
        environment:
            - DB_NAME=prime_datadb
            - COMPOSE_PROJECT_NAME 
        entrypoint: python3
        command: app.py
        depends_on: 
            - primary_manager

    # BROKERS
     
    #     Template to add new broker 
    #     broker-<id>:
    #         image : connectify/broker
    #         build : ./broker
    #         container_name : broker-<id>
    #         networks : internal
    
    broker-1:
        image: connectify/broker
        build: ./broker
        container_name: broker-1
        volumes:
            - ./broker/:/app/
        networks:       
            - internal
        restart: always
        hostname: broker-1
        depends_on:
            - masterdb-1
        environment:
            - DB_NAME=masterdb-1
            - COMPOSE_PROJECT_NAME 
        entrypoint: python3
        command: app.py

    broker-2: 
        image: connectify/broker
        build: ./broker
        container_name: broker-2
        networks:       
            - internal
        restart: always
        hostname: broker-2
        depends_on:
            - masterdb-2
        environment:
            - DB_NAME=masterdb-2
            - COMPOSE_PROJECT_NAME 
        entrypoint: python3
        command: app.py
    
    broker-3: 
        image: connectify/broker
        build: ./broker
        container_name: broker-3
        networks:       
            - internal
        restart: always
        hostname: broker-3
        depends_on:
            - masterdb-3
        environment:
            - DB_NAME=masterdb-3
            - COMPOSE_PROJECT_NAME 

    # PRIME_MANAGER DATA DB 

    prime_datadb: 
        image: postgres:13
        container_name: prime_datadb
        restart: always
        volumes:
                - ./database_volumes/prime_datadb_data:/var/lib/postgresql/data
        hostname: prime_datadb
        environment:
                - 'POSTGRES_PASSWORD=postgres'
                - 'POSTGRES_DB=prime_datadb'
                - COMPOSE_PROJECT_NAME 
        networks:       
            - internal
    # MASTER DATABASES

    masterdb-1:
        image: postgres:13
        container_name: masterdb-1
        restart: always
        volumes:
                - ./database_volumes/masterdb1_data:/var/lib/postgresql/data
        hostname: masterdb-1
        environment:
                - 'POSTGRES_PASSWORD=postgres'
                - 'POSTGRES_DB=masterdb-1'
                - COMPOSE_PROJECT_NAME 
        networks:       
            - internal
        
    masterdb-2:
        image: postgres:13
        container_name: masterdb-2
        restart: always
        volumes:
                - ./database_volumes/masterdb2_data:/var/lib/postgresql/data
        hostname: masterdb-2
        environment:
                - 'POSTGRES_PASSWORD=postgres'
                - 'POSTGRES_DB=masterdb-2'
                - COMPOSE_PROJECT_NAME 
        networks:       
            - internal
    masterdb-3:
        image: postgres:13
        container_name: masterdb-3
        restart: always
        volumes:
                - ./database_volumes/masterdb3_data:/var/lib/postgresql/data
        hostname: masterdb-3
        environment:
                - 'POSTGRES_PASSWORD=postgres'
                - 'POSTGRES_DB=masterdb-3'
                - COMPOSE_PROJECT_NAME 
        networks:       
            - internal
        
        # postgres:
        #         image: postgres:13
        #         container_name: master_db
        #         restart: always
        #         volumes:
        #                 - ./data:/var/lib/postgresql/data
        #                 - ./master_confs/my-postgres.conf:/var/lib/postgresql/data/postgresql.conf
        #                 - ./master_confs/my-pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf
        #         hostname: master_db
        #         ports:
        #                 - 5432:5432
        #         environment:
        #                 - 'POSTGRES_PASSWORD=postgres'
        #                 - 'POSTGRES_DB=master_database'

        # postgres_slave: 
        #         image: postgres:13
        #         container_name: slave_db
        #         restart: always
        #         volumes:
        #                 - ./data-slave:/var/lib/postgresql/data
        #                 - ./my-postgres.conf:/var/lib/postgresql/data/postgresql.conf
        #                 - ./my-pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf
        #         hostname: slave_db_1
        #         ports:
        #                 - 5433:5432
        #         environment:
        #                 - 'POSTGRES_PASSWORD=postgres'
        #                 - 'POSTGRES_DB=slave_database'

networks:
    internal: {}